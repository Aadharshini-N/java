1. Single Inheritance

class ClassA {
    public void dispA() {
        System.out.println("disp() method of ClassA");
    }
}

class ClassB extends ClassA {
    public void dispB() {
        System.out.println("disp() method of ClassB");
    }

    public static void main(String[] args) {
        ClassB b = new ClassB();
        b.dispA();  
        b.dispB();  
    }
}

#output
disp() method of ClassA
disp() method of ClassB


2. Multilevel Inheritance

class ClassA {
    public void dispA() {
        System.out.println("disp() method of ClassA");
    }
}

class ClassB extends ClassA {
    public void dispB() {
        System.out.println("disp() method of ClassB");
    }
}

class ClassC extends ClassB {
    public void dispC() {
        System.out.println("disp() method of ClassC");
    }

    public static void main(String[] args) {
        ClassC c = new ClassC();
        c.dispA();  
        c.dispB(); 
        c.dispC();  
    }
}

#output
disp() method of ClassA
disp() method of ClassB
disp() method of ClassC

3. Hierarchical Inheritance

class ClassA {
    public void dispA() {
        System.out.println("disp() method of ClassA");
    }
}

class ClassB extends ClassA {
    public void dispB() {
        System.out.println("disp() method of ClassB");
    }
}

class ClassC extends ClassA {
    public void dispC() {
        System.out.println("disp() method of ClassC");
    }
}

class ClassD extends ClassA {
    public void dispD() {
        System.out.println("disp() method of ClassD");
    }
}

public class Test {
    public static void main(String[] args) {
        ClassB b = new ClassB();
        b.dispB();
        b.dispA();

        ClassC c = new ClassC();
        c.dispC();
        c.dispA();

        ClassD d = new ClassD();
        d.dispD();
        d.dispA();
    }
}

#output
disp() method of ClassB
disp() method of ClassA
disp() method of ClassC
disp() method of ClassA
disp() method of ClassD
disp() method of ClassA




